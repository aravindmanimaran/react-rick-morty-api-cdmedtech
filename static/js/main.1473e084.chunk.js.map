{"version":3,"sources":["api/rickandmorty.js","components/Character/index.js","components/AddPreferredCharacter/index.js","components/Loading/index.js","components/Pagination/index.js","components/RemovePreferredCharacter/index.js","pages/RickAndMorty/Characters.js","pages/RickAndMorty/CharacterDetails.js","App.js","reportWebVitals.js","index.js"],"names":["CHARACTERS_API","Character","props","character","id","name","image","history","useHistory","ComponentToAdd","componentToAdd","className","onClick","push","alt","src","handlePreferredClick","AddPreferredCharacter","Loading","Pagination","prev","next","onPrevious","onNext","RemovePreferredCharacter","Characters","useState","characters","setCharacters","info","setInfo","preferred","setPreferred","fetchCharacters","url","fetch","then","res","json","results","Array","isArray","catch","error","console","log","e","useEffect","preferredCharacterFromLocalStorage","JSON","parse","localStorage","getItem","saveToLocalStorage","items","setItem","stringify","map","newPreferredCharacter","addPreferredCharacter","filter","characterEach","removePreferredCharacter","CharacterDetails","match","params","charDetails","setCharDetails","err","origin","location","species","gender","status","episode","to","episodeEach","split","pop","App","path","component","exact","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1473e084.chunk.js","sourcesContent":["export const RICK_AND_MORTY_BASE_URL = \"https://rickandmortyapi.com/api\";\r\nexport const CHARACTERS_API = `${RICK_AND_MORTY_BASE_URL}/character`;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Character = (props) => {\r\n  let { id, name, image } = props.character;\r\n  let history = useHistory();\r\n  const ComponentToAdd = props.componentToAdd;\r\n\r\n  return (\r\n    <div className=\"card black character\">\r\n      <div\r\n        className=\"image-and-content\"\r\n        onClick={() => history.push(`/character/${id}`)}\r\n      >\r\n        <div className=\"image-container\">\r\n          <img alt={name} src={image} />\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <strong className=\"green-text\">{name}</strong>\r\n        </div>\r\n      </div>\r\n      <div onClick={() => props.handlePreferredClick()} className=\"overlay\">\r\n        <ComponentToAdd />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n","import React from \"react\";\r\n\r\nconst AddPreferredCharacter = () => {\r\n  return (\r\n    <div className=\"green-text\">\r\n      <span>Add to preferred</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPreferredCharacter;\r\n","import React from \"react\";\r\n\r\nfunction Loading(props) {\r\n  return (\r\n    <div className=\"progress\">\r\n      <div className=\"indeterminate\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({ prev, next, onPrevious, onNext }) => {\r\n  const handlePrevious = () => {\r\n    onPrevious();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    onNext();\r\n  };\r\n\r\n  return (\r\n    <nav className=\"white\">\r\n      <ul className=\"pagination\">\r\n        {prev ? (\r\n          <li className=\"page-item\">\r\n            <button\r\n              className=\"page-link green-text btn-flat\"\r\n              onClick={handlePrevious}\r\n            >\r\n              {`< Previous`}\r\n            </button>\r\n          </li>\r\n        ) : null}\r\n        {next ? (\r\n          <li className=\"page-item\">\r\n            <button\r\n              className=\"page-link green-text btn-flat\"\r\n              onClick={handleNext}\r\n            >\r\n              {`Next >`}\r\n            </button>\r\n          </li>\r\n        ) : null}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst RemovePreferredCharacter = () => {\r\n  return (\r\n    <div className=\"green-text\">\r\n      <span>Remove</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemovePreferredCharacter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CHARACTERS_API } from \"../../api/rickandmorty\";\r\nimport Character from \"../../components/Character\";\r\nimport AddPreferredCharacter from \"../../components/AddPreferredCharacter\";\r\nimport Loading from \"../../components/Loading\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport RemovePreferredCharacter from \"../../components/RemovePreferredCharacter\";\r\n\r\nfunction Characters(props) {\r\n  let [characters, setCharacters] = useState(null);\r\n  const [info, setInfo] = useState({});\r\n  const [preferred, setPreferred] = useState([]);\r\n\r\n  const fetchCharacters = (url) => {\r\n    try {\r\n      fetch(url)\r\n        .then((res) => res.json())\r\n        .then(({ info, results }) => {\r\n          if (results && Array.isArray(results)) {\r\n            setCharacters(results);\r\n          }\r\n          if (info) {\r\n            setInfo(info);\r\n          }\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCharacters(CHARACTERS_API);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const preferredCharacterFromLocalStorage = JSON.parse(\r\n      localStorage.getItem(\"react-rick-and-morty-preferred-characters\")\r\n    );\r\n\r\n    setPreferred(preferredCharacterFromLocalStorage);\r\n  }, []);\r\n\r\n  const saveToLocalStorage = (items) => {\r\n    localStorage.setItem(\r\n      \"react-rick-and-morty-preferred-characters\",\r\n      JSON.stringify(items)\r\n    );\r\n  };\r\n\r\n  const addPreferredCharacter = (character) => {\r\n    const newPreferredCharacter = [...preferred, character];\r\n    setPreferred(newPreferredCharacter);\r\n    saveToLocalStorage(newPreferredCharacter);\r\n  };\r\n\r\n  const removePreferredCharacter = (character) => {\r\n    const newPreferredCharacter = preferred.filter(\r\n      (characterEach) => characterEach.id !== character.id\r\n    );\r\n    setPreferred(newPreferredCharacter);\r\n    saveToLocalStorage(newPreferredCharacter);\r\n  };\r\n\r\n  const onPrevious = () => {\r\n    fetchCharacters(info.prev);\r\n  };\r\n\r\n  const onNext = () => {\r\n    fetchCharacters(info.next);\r\n  };\r\n\r\n  if (!characters) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header-and-pagination\">\r\n        <h2 className=\"green-text\">Characters</h2>\r\n        <Pagination\r\n          prev={info.prev}\r\n          next={info.next}\r\n          onPrevious={onPrevious}\r\n          onNext={onNext}\r\n        />\r\n      </div>\r\n      <hr />\r\n      <div className=\"row\">\r\n        {characters.map((character) => {\r\n          return (\r\n            <div className=\"col s2\" key={character.id}>\r\n              <Character\r\n                key={character.id}\r\n                character={character}\r\n                handlePreferredClick={() => addPreferredCharacter(character)}\r\n                componentToAdd={AddPreferredCharacter}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <h2 className=\"green-text\">Preferred Characters</h2>\r\n      <hr />\r\n      <div className=\"row\">\r\n        {preferred.map((character) => {\r\n          return (\r\n            <div className=\"col s2\" key={character.id}>\r\n              <Character\r\n                key={character.id}\r\n                character={character}\r\n                handlePreferredClick={() => removePreferredCharacter(character)}\r\n                componentToAdd={RemovePreferredCharacter}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Characters;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CHARACTERS_API } from \"../../api/rickandmorty\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nfunction CharacterDetails({ match }) {\r\n  let { id } = match.params;\r\n  let [charDetails, setCharDetails] = useState(null);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      fetch(`${CHARACTERS_API}/${id}`)\r\n        .then((res) => res.json())\r\n        .then((res) => setCharDetails(res))\r\n        .catch((err) => console.log(err));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [id]);\r\n\r\n  if (!charDetails) {\r\n    return <Loading />;\r\n  }\r\n\r\n  let { image, origin, location, species, gender, status, name, episode } =\r\n    charDetails;\r\n\r\n  return (\r\n    <div className=\"container green-text\">\r\n      <br />\r\n      <Link to=\"/characters\" className=\"green-text\">{`< Back`}</Link>\r\n      <h2>{name}</h2>\r\n      <hr />\r\n      <div className=\"charDetails\">\r\n        <div>\r\n          <img alt={name} src={image} />\r\n        </div>\r\n        <div>\r\n          <ul className=\"collection\">\r\n            <li className=\"collection-item\">\r\n              <strong>Origin:</strong> {origin.name}\r\n            </li>\r\n            <li className=\"collection-item\">\r\n              <strong>Location:</strong> {location.name}\r\n            </li>\r\n            <li className=\"collection-item\">\r\n              <strong>Species:</strong> {species}\r\n            </li>\r\n            <li className=\"collection-item\">\r\n              <strong>Gender:</strong> {gender}\r\n            </li>\r\n            <li className=\"collection-item\">\r\n              <strong>Status:</strong> {status}\r\n            </li>\r\n            <li className=\"collection-item\">\r\n              <strong>Episodes:</strong>{\" \"}\r\n              {episode.map((episodeEach) => (\r\n                <span> {episodeEach.split(\"/\").pop()} </span>\r\n              ))}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharacterDetails;\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Characters from \"./pages/RickAndMorty/Characters\";\nimport CharacterDetails from \"./pages/RickAndMorty/CharacterDetails\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/character/:id\" component={CharacterDetails} />\n        <Route path=\"/characters\" component={Characters} />\n        <Redirect exact from=\"/\" to=\"/characters\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}